{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin-routing.module.ts","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/admin/admin.module.ts","webpack:///./src/app/admin/email-blast/email-blast.component.html","webpack:///./src/app/admin/email-blast/email-blast.component.ts","webpack:///./src/app/admin/users/users.component.html","webpack:///./src/app/admin/users/users.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/customer-list/customer-list-datasource.ts","webpack:///./src/app/customer-list/customer-list.component.html","webpack:///./src/app/customer-list/customer-list.component.ts","webpack:///./src/app/customer/customer.component.html","webpack:///./src/app/customer/customer.component.ts","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from './admin.component';\nimport { UsersComponent } from './users/users.component';\nimport { EmailBlastComponent } from './email-blast/email-blast.component';\n\nconst routes: Routes = [\n\n  {\n    path: 'admin',\n    component: AdminComponent,\n    children: [\n      { path: '', component: UsersComponent },\n      { path: 'blast', component: EmailBlastComponent },\n    ]\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule { }\n","<p>\n  admin works!\n</p>\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { AdminComponent } from './admin.component';\nimport { EmailBlastComponent } from './email-blast/email-blast.component';\nimport { UsersComponent } from './users/users.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AdminRoutingModule\n  ],\n  declarations: [AdminComponent, EmailBlastComponent, UsersComponent]\n})\nexport class AdminModule { }\n","<p>\n  email-blast works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-email-blast',\n  templateUrl: './email-blast.component.html',\n  styleUrls: ['./email-blast.component.css']\n})\nexport class EmailBlastComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  users works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CustomerComponent } from './customer/customer.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: 'dashboard' },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'customer', component: CustomerComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","<div>\n  <app-nav></app-nav>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-routing';\n}\n","import { LayoutModule } from '@angular/cdk/layout';\nimport { NgModule } from '@angular/core';\nimport {\n  MatButtonModule,\n  MatIconModule,\n  MatListModule,\n  MatSidenavModule,\n  MatToolbarModule, MatGridListModule, MatCardModule, MatMenuModule, MatTableModule, MatPaginatorModule, MatSortModule\n} from '@angular/material';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AdminModule } from './admin/admin.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CustomerComponent } from './customer/customer.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { NavComponent } from './nav/nav.component';\nimport { CustomerListComponent } from './customer-list/customer-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    CustomerComponent,\n    NavComponent,\n    CustomerListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AdminModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface CustomerListItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: CustomerListItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the CustomerList view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class CustomerListDataSource extends DataSource<CustomerListItem> {\n  data: CustomerListItem[] = EXAMPLE_DATA;\n\n  constructor(private paginator: MatPaginator, private sort: MatSort) {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<CustomerListItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    // Set the paginators length\n    this.paginator.length = this.data.length;\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: CustomerListItem[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: CustomerListItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","<div class=\"mat-elevation-z8\">\n  <table mat-table #table [dataSource]=\"dataSource\" matSort aria-label=\"Elements\">\n    <!-- Id Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n      <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n  <mat-paginator #paginator\n    [length]=\"dataSource.data.length\"\n    [pageIndex]=\"0\"\n    [pageSize]=\"5\"\n    [pageSizeOptions]=\"[5, 10, 25, 50, 100, 250]\">\n  </mat-paginator>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { CustomerListDataSource } from './customer-list-datasource';\n\n@Component({\n  selector: 'app-customer-list',\n  templateUrl: './customer-list.component.html',\n  styleUrls: ['./customer-list.component.css']\n})\nexport class CustomerListComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  dataSource: CustomerListDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name'];\n\n  ngOnInit() {\n    this.dataSource = new CustomerListDataSource(this.paginator, this.sort);\n  }\n}\n","<app-customer-list></app-customer-list>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"grid-container\">\n  <h1 class=\"mat-h1\">Dashboard</h1>\n  <mat-grid-list cols=\"2\" rowHeight=\"350px\">\n    <mat-grid-tile *ngFor=\"let card of cards | async\" [colspan]=\"card.cols\" [rowspan]=\"card.rows\">\n      <mat-card class=\"dashboard-card\">\n        <mat-card-header>\n          <mat-card-title>\n            {{card.title}}\n            <button mat-icon-button class=\"more-button\" [matMenuTriggerFor]=\"menu\" aria-label=\"Toggle menu\">\n              <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n              <button mat-menu-item>Expand</button>\n              <button mat-menu-item>Remove</button>\n            </mat-menu>\n          </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"dashboard-card-content\">\n          <div>Card Content Here</div>\n        </mat-card-content>\n      </mat-card>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>","import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointState, BreakpointObserver } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          { title: 'Card 1', cols: 1, rows: 1 },\n          { title: 'Card 2', cols: 1, rows: 1 },\n          { title: 'Card 3', cols: 1, rows: 1 },\n          { title: 'Card 4', cols: 1, rows: 1 }\n        ];\n      }\n\n      return [\n        { title: 'Card 1', cols: 2, rows: 1 },\n        { title: 'Card 2', cols: 1, rows: 1 },\n        { title: 'Card 3', cols: 1, rows: 2 },\n        { title: 'Card 4', cols: 1, rows: 1 }\n      ];\n    })\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav\n    #drawer\n    class=\"sidenav\"\n    fixedInViewport=\"true\"\n    [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n    [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n    [opened]=\"!(isHandset$ | async)\"\n    disableClose=\"true\"\n    >\n    <mat-toolbar color=\"primary\">Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item href=\"\" [routerLink]=\"['/dashboard']\">Dashboard</a>\n      <a mat-list-item href=\"\" [routerLink]=\"['/customer']\">Customer</a>\n      <a mat-list-item href=\"\" [routerLink]=\"['/admin']\">Admin -> Users</a>\n      <a mat-list-item href=\"\" [routerLink]=\"['/admin/blast']\">Admin -> Blast</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>angular-routing</span>\n    </mat-toolbar>\n    <!-- Add Content Here -->\n    <router-outlet></router-outlet>\n\n\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n    \n  constructor(private breakpointObserver: BreakpointObserver) {}\n  \n  }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}